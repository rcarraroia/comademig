# ============================================================================
# CONFIGURAÇÃO DE PRODUÇÃO - SISTEMA DE PAGAMENTOS COMADEMIG
# ============================================================================

# Ambiente
NODE_ENV=production
PORT=3000

# ============================================================================
# CONFIGURAÇÕES DO ASAAS - PRODUÇÃO
# ============================================================================

# Chave da API Asaas PRODUÇÃO (obter no painel Asaas)
ASAAS_API_KEY=your_production_asaas_api_key_here

# Ambiente Asaas
ASAAS_ENVIRONMENT=production

# URL base do Asaas
ASAAS_BASE_URL=https://www.asaas.com/api/v3

# ============================================================================
# CONFIGURAÇÕES DO SUPABASE - PRODUÇÃO
# ============================================================================

# URL do projeto Supabase
SUPABASE_URL=https://amkelczfwazutrciqtlk.supabase.co

# Chave anônima (pública)
SUPABASE_ANON_KEY=your_production_supabase_anon_key_here

# Chave de service role (privada - NUNCA expor no frontend)
SUPABASE_SERVICE_ROLE_KEY=your_production_supabase_service_role_key_here

# ============================================================================
# CONFIGURAÇÕES DE SPLIT DE PAGAMENTO - PRODUÇÃO
# ============================================================================

# Carteira COMADEMIG no Asaas (40%)
COMADEMIG_WALLET_ID=your_production_comademig_wallet_id

# Carteira RENUM no Asaas (40%)
RENUM_WALLET_ID=your_production_renum_wallet_id

# ============================================================================
# CONFIGURAÇÕES DE SEGURANÇA - PRODUÇÃO
# ============================================================================

# Chave secreta para JWT (GERAR UMA NOVA PARA PRODUÇÃO)
JWT_SECRET=your_super_secure_production_jwt_key_here

# Token para validação de webhooks
WEBHOOK_SECRET_TOKEN=your_production_webhook_secret_token

# Token interno para APIs administrativas
INTERNAL_API_TOKEN=your_production_internal_api_token

# Domínios permitidos para CORS
ALLOWED_ORIGINS=https://comademig.com.br,https://www.comademig.com.br,https://app.comademig.com.br

# ============================================================================
# CONFIGURAÇÕES DE NOTIFICAÇÕES - PRODUÇÃO
# ============================================================================

# Webhook do Slack para notificações administrativas
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/PRODUCTION/WEBHOOK

# Email do administrador
ADMIN_EMAIL=admin@comademig.com.br

# ============================================================================
# CONFIGURAÇÕES DE RATE LIMITING - PRODUÇÃO
# ============================================================================

# Limite geral de requisições por IP (por minuto)
RATE_LIMIT_GENERAL=200

# Limite para endpoints de pagamento (por minuto)
RATE_LIMIT_PAYMENT=20

# Limite para webhooks (por minuto)
RATE_LIMIT_WEBHOOK=2000

# ============================================================================
# CONFIGURAÇÕES DE LOGGING - PRODUÇÃO
# ============================================================================

# Nível de log (error, warn, info)
LOG_LEVEL=info

# Arquivo de log
LOG_FILE=logs/production.log

# ============================================================================
# CONFIGURAÇÕES DE PERFORMANCE - PRODUÇÃO
# ============================================================================

# URL base da API em produção
API_BASE_URL=https://api.comademig.com.br

# Timeout para requisições externas (em ms)
REQUEST_TIMEOUT=30000

# Número máximo de tentativas para retry
MAX_RETRY_ATTEMPTS=3

# Timeout do circuit breaker (em ms)
CIRCUIT_BREAKER_TIMEOUT=60000

# ============================================================================
# CONFIGURAÇÕES DE MONITORAMENTO - PRODUÇÃO
# ============================================================================

# Habilitar métricas de performance
ENABLE_METRICS=true

# Endpoint para health checks
HEALTH_CHECK_ENDPOINT=/health

# Intervalo de health checks (em segundos)
HEALTH_CHECK_INTERVAL=30

# ============================================================================
# CONFIGURAÇÕES DE BANCO DE DADOS - PRODUÇÃO
# ============================================================================

# Pool de conexões
DB_POOL_MIN=2
DB_POOL_MAX=10

# Timeout de conexão (em ms)
DB_CONNECTION_TIMEOUT=10000

# ============================================================================
# CONFIGURAÇÕES DE CACHE - PRODUÇÃO
# ============================================================================

# Redis URL (se usar cache)
REDIS_URL=redis://localhost:6379

# TTL padrão do cache (em segundos)
CACHE_TTL=300

# ============================================================================
# CONFIGURAÇÕES DE JOBS - PRODUÇÃO
# ============================================================================

# Habilitar jobs automáticos
ENABLE_CRON_JOBS=true

# Horário da conciliação diária (formato cron)
RECONCILIATION_CRON=0 2 * * *

# Horário da verificação de tokens (formato cron)
TOKEN_CHECK_CRON=0 */6 * * *

# Horário do retry de webhooks (formato cron)
WEBHOOK_RETRY_CRON=*/15 * * * *

# ============================================================================
# CONFIGURAÇÕES DE ALERTAS - PRODUÇÃO
# ============================================================================

# Limite de erro para alertas (%)
ERROR_RATE_THRESHOLD=5

# Limite de tempo de resposta para alertas (ms)
RESPONSE_TIME_THRESHOLD=2000

# Limite de uso de CPU para alertas (%)
CPU_THRESHOLD=80

# Limite de uso de memória para alertas (%)
MEMORY_THRESHOLD=85

# ============================================================================
# INSTRUÇÕES DE DEPLOY
# ============================================================================

# 1. Copie este arquivo para .env no servidor de produção
# 2. Substitua TODOS os valores "your_*_here" pelos valores reais
# 3. Gere chaves seguras usando: node generate-keys.js
# 4. Configure as carteiras no Asaas
# 5. Configure os webhooks no Asaas apontando para sua API
# 6. Execute: npm run validate
# 7. Execute: npm start

# ============================================================================
# CHECKLIST DE SEGURANÇA
# ============================================================================

# ✅ Chaves JWT diferentes de desenvolvimento
# ✅ Tokens internos únicos e seguros
# ✅ CORS configurado apenas para domínios de produção
# ✅ Rate limiting configurado adequadamente
# ✅ Logs configurados para produção
# ✅ Monitoramento ativo
# ✅ Alertas configurados
# ✅ Backup das chaves em local seguro

# IMPORTANTE:
# - NUNCA commite este arquivo no Git
# - Mantenha backup seguro das chaves
# - Rotacione chaves periodicamente
# - Monitore logs de segurança
# - Configure alertas para falhas críticas