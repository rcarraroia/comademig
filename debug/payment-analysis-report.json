{
  "frontend": {
    "components": {
      "count": 20,
      "components": [
        {
          "file": "src\\components\\payments\\PaymentCheckout.tsx",
          "type": "Checkout",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": true
        },
        {
          "file": "src\\components\\payments\\PaymentForm.tsx",
          "type": "Form",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": true
        },
        {
          "file": "src\\components\\payments\\PaymentResult.tsx",
          "type": "Component",
          "hasAsaasIntegration": false,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": false
        },
        {
          "file": "src\\components\\admin\\AdminNotificationDashboard.tsx",
          "type": "Component",
          "hasAsaasIntegration": false,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": true
        },
        {
          "file": "src\\components\\affiliates\\AffiliateConfiguration.tsx",
          "type": "Component",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": true
        },
        {
          "file": "src\\components\\affiliates\\AffiliateDashboard.tsx",
          "type": "Component",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": false
        },
        {
          "file": "src\\components\\affiliates\\AffiliateEarnings.tsx",
          "type": "Component",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": false
        },
        {
          "file": "src\\components\\affiliates\\AffiliatePanel.tsx",
          "type": "Component",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": false
        },
        {
          "file": "src\\components\\affiliates\\AffiliateRegistration.tsx",
          "type": "Component",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": true
        },
        {
          "file": "src\\components\\certidoes\\AdminAprovacao.tsx",
          "type": "Modal",
          "hasAsaasIntegration": false,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": true
        },
        {
          "file": "src\\components\\certidoes\\AdminCertidoes.tsx",
          "type": "Component",
          "hasAsaasIntegration": false,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": false
        },
        {
          "file": "src\\components\\certidoes\\FormSolicitacaoCertidao.tsx",
          "type": "Component",
          "hasAsaasIntegration": false,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": true
        },
        {
          "file": "src\\components\\events\\EventRegistrationModal.tsx",
          "type": "Form",
          "hasAsaasIntegration": false,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": false
        },
        {
          "file": "src\\components\\events\\EventsList.tsx",
          "type": "Component",
          "hasAsaasIntegration": false,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": false
        },
        {
          "file": "src\\components\\events\\MyEventsList.tsx",
          "type": "Component",
          "hasAsaasIntegration": false,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": false
        },
        {
          "file": "src\\components\\filiacao\\SubscriptionStatus.tsx",
          "type": "Component",
          "hasAsaasIntegration": false,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": true
        },
        {
          "file": "src\\components\\payments\\PaymentCheckout.tsx",
          "type": "Checkout",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": true
        },
        {
          "file": "src\\components\\payments\\PaymentForm.tsx",
          "type": "Form",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": true
        },
        {
          "file": "src\\components\\payments\\PaymentResult.tsx",
          "type": "Component",
          "hasAsaasIntegration": false,
          "hasSupabaseIntegration": false,
          "hasFormValidation": false,
          "hasErrorHandling": false
        },
        {
          "file": "src\\components\\regularizacao\\AdminRegularizacao.tsx",
          "type": "Modal",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": true,
          "hasFormValidation": false,
          "hasErrorHandling": false
        }
      ]
    },
    "hooks": {
      "count": 10,
      "hooks": [
        {
          "file": "src\\hooks\\useAdminNotifications.ts",
          "name": "useAdminNotifications",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": true,
          "hasErrorHandling": false,
          "exports": [
            "useAdminNotifications"
          ]
        },
        {
          "file": "src\\hooks\\useAffiliate.ts",
          "name": "useAffiliate",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": true,
          "hasErrorHandling": true,
          "exports": [
            "useAffiliate"
          ]
        },
        {
          "file": "src\\hooks\\useAsaasPayments.ts",
          "name": "useAsaasPayments",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": true,
          "hasErrorHandling": true,
          "exports": [
            "useAsaasPayments"
          ]
        },
        {
          "file": "src\\hooks\\useAuditLog.ts",
          "name": "useAuditLog",
          "hasAsaasIntegration": false,
          "hasSupabaseIntegration": true,
          "hasErrorHandling": true,
          "exports": [
            "useAuditLog"
          ]
        },
        {
          "file": "src\\hooks\\useCertidoesWithPayment.ts",
          "name": "useCertidoesWithPayment",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": true,
          "hasErrorHandling": true,
          "exports": [
            "useCertidoesWithPayment"
          ]
        },
        {
          "file": "src\\hooks\\useRegularizacaoWithPayment.ts",
          "name": "useRegularizacaoWithPayment",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": true,
          "hasErrorHandling": true,
          "exports": [
            "useRegularizacaoWithPayment",
            "getServicoDisplayName"
          ]
        },
        {
          "file": "src\\hooks\\useSecurityValidations.ts",
          "name": "useSecurityValidations",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": true,
          "hasErrorHandling": true,
          "exports": [
            "useSecurityValidations"
          ]
        },
        {
          "file": "src\\hooks\\useSubscriptionRetry.ts",
          "name": "useSubscriptionRetry",
          "hasAsaasIntegration": false,
          "hasSupabaseIntegration": true,
          "hasErrorHandling": true,
          "exports": [
            "useSubscriptionRetry"
          ]
        },
        {
          "file": "src\\hooks\\useSubscriptions.ts",
          "name": "useSubscriptions",
          "hasAsaasIntegration": false,
          "hasSupabaseIntegration": true,
          "hasErrorHandling": false,
          "exports": [
            "useSubscriptionPlans",
            "useUserSubscriptions",
            "useMemberTypeSubscriptions",
            "useSubscriptionStats"
          ]
        },
        {
          "file": "src\\hooks\\useUserSubscriptions.ts",
          "name": "useUserSubscriptions",
          "hasAsaasIntegration": false,
          "hasSupabaseIntegration": true,
          "hasErrorHandling": false,
          "exports": [
            "useUserSubscriptions",
            "useActiveSubscription"
          ]
        }
      ]
    },
    "forms": {
      "count": 16,
      "forms": [
        {
          "file": "src\\components\\admin\\AdminNotificationDashboard.tsx",
          "hasValidation": false,
          "hasSubmitHandler": false,
          "hasPaymentMethods": false,
          "hasErrorHandling": true
        },
        {
          "file": "src\\components\\affiliates\\AffiliateDashboard.tsx",
          "hasValidation": false,
          "hasSubmitHandler": false,
          "hasPaymentMethods": false,
          "hasErrorHandling": false
        },
        {
          "file": "src\\components\\affiliates\\AffiliateEarnings.tsx",
          "hasValidation": false,
          "hasSubmitHandler": false,
          "hasPaymentMethods": false,
          "hasErrorHandling": false
        },
        {
          "file": "src\\components\\certidoes\\AdminAprovacao.tsx",
          "hasValidation": false,
          "hasSubmitHandler": false,
          "hasPaymentMethods": false,
          "hasErrorHandling": true
        },
        {
          "file": "src\\components\\events\\EventRegistrationModal.tsx",
          "hasValidation": false,
          "hasSubmitHandler": false,
          "hasPaymentMethods": false,
          "hasErrorHandling": false
        },
        {
          "file": "src\\components\\filiacao\\SubscriptionStatus.tsx",
          "hasValidation": false,
          "hasSubmitHandler": false,
          "hasPaymentMethods": false,
          "hasErrorHandling": true
        },
        {
          "file": "src\\components\\payments\\PaymentCheckout.tsx",
          "hasValidation": false,
          "hasSubmitHandler": true,
          "hasPaymentMethods": true,
          "hasErrorHandling": true
        },
        {
          "file": "src\\components\\payments\\PaymentForm.tsx",
          "hasValidation": false,
          "hasSubmitHandler": true,
          "hasPaymentMethods": true,
          "hasErrorHandling": true
        },
        {
          "file": "src\\components\\payments\\PaymentResult.tsx",
          "hasValidation": false,
          "hasSubmitHandler": false,
          "hasPaymentMethods": true,
          "hasErrorHandling": false
        },
        {
          "file": "src\\pages\\Checkout.tsx",
          "hasValidation": false,
          "hasSubmitHandler": false,
          "hasPaymentMethods": true,
          "hasErrorHandling": true
        },
        {
          "file": "src\\pages\\CheckoutNew.tsx",
          "hasValidation": false,
          "hasSubmitHandler": false,
          "hasPaymentMethods": true,
          "hasErrorHandling": true
        },
        {
          "file": "src\\pages\\dashboard\\Certidoes.tsx",
          "hasValidation": false,
          "hasSubmitHandler": false,
          "hasPaymentMethods": false,
          "hasErrorHandling": false
        },
        {
          "file": "src\\pages\\dashboard\\CheckoutRegularizacao.tsx",
          "hasValidation": false,
          "hasSubmitHandler": false,
          "hasPaymentMethods": false,
          "hasErrorHandling": true
        },
        {
          "file": "src\\pages\\dashboard\\Financeiro.tsx",
          "hasValidation": false,
          "hasSubmitHandler": false,
          "hasPaymentMethods": false,
          "hasErrorHandling": true
        },
        {
          "file": "src\\pages\\Filiacao.tsx",
          "hasValidation": false,
          "hasSubmitHandler": false,
          "hasPaymentMethods": true,
          "hasErrorHandling": true
        },
        {
          "file": "src\\pages\\PagamentoSucesso.tsx",
          "hasValidation": false,
          "hasSubmitHandler": false,
          "hasPaymentMethods": true,
          "hasErrorHandling": false
        }
      ]
    },
    "checkout": {
      "count": 7,
      "pages": [
        {
          "file": "src\\pages\\Checkout.tsx",
          "name": "Checkout",
          "hasPaymentProcessing": true,
          "hasRedirection": true,
          "hasErrorHandling": true
        },
        {
          "file": "src\\pages\\CheckoutNew.tsx",
          "name": "CheckoutNew",
          "hasPaymentProcessing": true,
          "hasRedirection": true,
          "hasErrorHandling": true
        },
        {
          "file": "src\\pages\\dashboard\\Certidoes.tsx",
          "name": "Certidoes",
          "hasPaymentProcessing": true,
          "hasRedirection": false,
          "hasErrorHandling": false
        },
        {
          "file": "src\\pages\\dashboard\\CheckoutRegularizacao.tsx",
          "name": "CheckoutRegularizacao",
          "hasPaymentProcessing": true,
          "hasRedirection": true,
          "hasErrorHandling": true
        },
        {
          "file": "src\\pages\\dashboard\\Financeiro.tsx",
          "name": "Financeiro",
          "hasPaymentProcessing": true,
          "hasRedirection": false,
          "hasErrorHandling": true
        },
        {
          "file": "src\\pages\\dashboard\\Regularizacao.tsx",
          "name": "Regularizacao",
          "hasPaymentProcessing": false,
          "hasRedirection": true,
          "hasErrorHandling": false
        },
        {
          "file": "src\\pages\\Filiacao.tsx",
          "name": "Filiacao",
          "hasPaymentProcessing": true,
          "hasRedirection": true,
          "hasErrorHandling": true
        }
      ]
    }
  },
  "backend": {
    "serverless": {
      "count": 3,
      "apis": [
        {
          "file": "create-payment.cjs",
          "type": "Payment",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": true,
          "hasCORS": true,
          "hasErrorHandling": true,
          "moduleType": "CommonJS"
        },
        {
          "file": "create-subscription.cjs",
          "type": "Subscription",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": true,
          "hasCORS": true,
          "hasErrorHandling": true,
          "moduleType": "CommonJS"
        },
        {
          "file": "webhook.js",
          "type": "Webhook",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": true,
          "hasCORS": true,
          "hasErrorHandling": true,
          "moduleType": "ES Module"
        }
      ]
    },
    "edgeFunctions": {
      "count": 6,
      "functions": [
        {
          "name": "asaas-create-payment",
          "file": "supabase\\functions\\asaas-create-payment\\index.ts",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": true,
          "hasCORS": true,
          "hasErrorHandling": true
        },
        {
          "name": "asaas-create-payment-with-split",
          "file": "supabase\\functions\\asaas-create-payment-with-split\\index.ts",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": true,
          "hasCORS": true,
          "hasErrorHandling": true
        },
        {
          "name": "asaas-create-subscription",
          "file": "supabase\\functions\\asaas-create-subscription\\index.ts",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": true,
          "hasCORS": true,
          "hasErrorHandling": true
        },
        {
          "name": "asaas-process-card",
          "file": "supabase\\functions\\asaas-process-card\\index.ts",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": false,
          "hasCORS": true,
          "hasErrorHandling": true
        },
        {
          "name": "asaas-process-payment",
          "file": "supabase\\functions\\asaas-process-payment\\index.ts",
          "hasAsaasIntegration": false,
          "hasSupabaseIntegration": false,
          "hasCORS": false,
          "hasErrorHandling": false
        },
        {
          "name": "asaas-process-pix",
          "file": "supabase\\functions\\asaas-process-pix\\index.ts",
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": false,
          "hasCORS": true,
          "hasErrorHandling": true
        }
      ]
    },
    "webhooks": {
      "count": 1,
      "webhooks": [
        {
          "type": "serverless",
          "file": "api/webhook.js",
          "hasEventHandling": true,
          "hasAsaasIntegration": true,
          "hasSupabaseIntegration": true,
          "hasErrorHandling": true
        }
      ]
    }
  },
  "integrations": {
    "asaas": {
      "configured": true,
      "apiKey": "Missing",
      "baseUrl": "https://www.asaas.com/api/v3",
      "endpoints": [
        "create-subscription",
        "create-payment"
      ],
      "issues": [],
      "hasCreatePayment": true,
      "hasCheckStatus": true,
      "hasErrorHandling": true
    },
    "supabase": {
      "configured": true,
      "url": "Missing",
      "key": "Missing",
      "tables": [
        "asaas_cobrancas",
        "user_subscriptions"
      ],
      "issues": []
    }
  },
  "flows": {
    "filiacao": {
      "page": "src/pages/Filiacao.tsx",
      "exists": true,
      "components": [],
      "issues": [],
      "hasPaymentForm": true,
      "hasRedirection": true,
      "hasErrorHandling": true,
      "usesAsaasHook": true
    },
    "certidoes": {
      "page": "src/pages/dashboard/Certidoes.tsx",
      "exists": true,
      "components": [],
      "issues": [],
      "hasPaymentIntegration": true,
      "hasCheckout": true,
      "hasErrorHandling": false
    },
    "regularizacao": {
      "page": "src/pages/dashboard/Regularizacao.tsx",
      "exists": true,
      "components": [],
      "issues": [],
      "hasPaymentIntegration": false,
      "hasCheckout": true,
      "hasErrorHandling": false
    },
    "checkout": {
      "page": "src/pages/Checkout.tsx",
      "exists": true,
      "components": [],
      "issues": [],
      "hasPaymentProcessing": true,
      "hasAsaasIntegration": true,
      "hasSupabaseIntegration": true,
      "hasErrorHandling": true
    }
  },
  "issues": [
    {
      "type": "MISSING_CONFIG",
      "severity": "HIGH",
      "message": "ASAAS_API_KEY não configurada"
    },
    {
      "type": "MISSING_CONFIG",
      "severity": "HIGH",
      "message": "SUPABASE_URL não configurada"
    }
  ],
  "recommendations": []
}