{
  "frontend": {
    "react": {
      "status": "OK",
      "version": "^18.2.0",
      "typescript": "Enabled"
    },
    "routing": {
      "status": "OK",
      "hasRouter": true,
      "routeCount": 65,
      "protectedRoutes": true
    },
    "components": {
      "status": "OK",
      "count": 140,
      "directories": [
        "admin",
        "affiliates",
        "auth",
        "carteira",
        "certidoes",
        "common",
        "communication",
        "dashboard",
        "debug",
        "events",
        "feedback",
        "filiacao",
        "forms",
        "layout",
        "payments",
        "regularizacao",
        "suporte",
        "ui"
      ]
    },
    "hooks": {
      "status": "OK",
      "count": 37,
      "customHooks": [
        "src\\hooks\\use-toast.ts",
        "src\\hooks\\useAccessibility.ts",
        "src\\hooks\\useAdminData.ts",
        "src\\hooks\\useAdminNotifications.ts",
        "src\\hooks\\useAffiliate.ts",
        "src\\hooks\\useAsaasPayments.ts",
        "src\\hooks\\useAuditLog.ts",
        "src\\hooks\\useAuthActions.ts",
        "src\\hooks\\useAuthPermissions.ts",
        "src\\hooks\\useAuthState.ts",
        "src\\hooks\\useCarteiraDigital.ts",
        "src\\hooks\\useCertidoes.ts",
        "src\\hooks\\useCertidoesPDF.ts",
        "src\\hooks\\useCertidoesWithPayment.ts",
        "src\\hooks\\useCertificadosEventos.ts",
        "src\\hooks\\useContent.ts",
        "src\\hooks\\useContentMutation.ts",
        "src\\hooks\\useContentPrefetch.ts",
        "src\\hooks\\useEventos.ts",
        "src\\hooks\\useFormValidation.ts",
        "src\\hooks\\useLoadingState.ts",
        "src\\hooks\\useMemberTypes.ts",
        "src\\hooks\\useMensagens.ts",
        "src\\hooks\\useNotifications.ts",
        "src\\hooks\\usePresencaEventos.ts",
        "src\\hooks\\useProfilePhoto.ts",
        "src\\hooks\\useProfileValidation.ts",
        "src\\hooks\\useRegularizacaoWithPayment.ts",
        "src\\hooks\\useResponsive.ts",
        "src\\hooks\\useSecurityValidations.ts",
        "src\\hooks\\useStorage.ts",
        "src\\hooks\\useSubscriptionRetry.ts",
        "src\\hooks\\useSubscriptions.ts",
        "src\\hooks\\useSupabaseQuery.ts",
        "src\\hooks\\useSuporteTickets.ts",
        "src\\hooks\\useUserRoles.ts",
        "src\\hooks\\useUserSubscriptions.ts"
      ]
    },
    "styles": {
      "status": "OK",
      "tailwind": true,
      "postcss": true,
      "cssFiles": 2
    },
    "build": {
      "status": "OK",
      "vite": true,
      "typescript": true,
      "buildScript": "Configured"
    }
  },
  "backend": {
    "serverless": {
      "status": "OK",
      "count": 3,
      "functions": [
        {
          "name": "create-payment.cjs",
          "type": "CommonJS"
        },
        {
          "name": "create-subscription.cjs",
          "type": "CommonJS"
        },
        {
          "name": "webhook.js",
          "type": "ES Module"
        }
      ]
    },
    "edgeFunctions": {
      "status": "OK",
      "count": 9,
      "functions": [
        "affiliates-management",
        "asaas-check-payment",
        "asaas-create-payment",
        "asaas-create-payment-with-split",
        "asaas-create-subscription",
        "asaas-process-card",
        "asaas-process-payment",
        "asaas-process-pix",
        "asaas-webhook"
      ]
    },
    "apis": {
      "status": "OK",
      "endpoints": [
        {
          "path": "/api/create-subscription",
          "exists": true
        },
        {
          "path": "/api/create-payment",
          "exists": true
        },
        {
          "path": "/api/webhook",
          "exists": true
        }
      ]
    },
    "middleware": {
      "status": "OK",
      "cors": "Configured in functions",
      "auth": "Supabase Auth",
      "rateLimit": "Not configured"
    }
  },
  "database": {
    "connection": {
      "status": "OK",
      "url": "Missing",
      "key": "Missing"
    },
    "tables": {
      "status": "OK",
      "expected": [
        "profiles",
        "member_types",
        "subscription_plans",
        "user_subscriptions",
        "asaas_cobrancas",
        "solicitacoes_certidoes"
      ],
      "note": "Verificação real requer conexão com banco"
    },
    "rls": {
      "status": "OK",
      "enabled": "Assumed enabled",
      "policies": "Need database connection to verify"
    },
    "indexes": {
      "status": "OK",
      "note": "Index analysis requires database connection"
    },
    "migrations": {
      "status": "OK",
      "count": 39,
      "migrations": [
        "20250109000001_create_member_types_system.sql",
        "20250109000002_create_regularization_system.sql",
        "20250109000003_implement_certification_payments.sql",
        "20250109000004_fix_filiation_system.sql",
        "20250109000004_fix_filiation_system_corrected.sql",
        "20250109000005_fix_rls_policies.sql",
        "20250109000006_cleanup_and_fix_certifications.sql",
        "20250109000007_safe_certification_system.sql",
        "20250109000008_fix_function_parameter.sql",
        "20250209000001_add_bio_column.sql",
        "20250209000002_create_presencas_eventos.sql",
        "20250722120659-6e28aa21-bf19-44c6-a361-1115ec84bac4.sql",
        "20250819003401_e19c9db8-8901-4ad0-b260-c674d9326d30.sql",
        "20250819010219_94d03395-3356-4bc2-904f-2e67d268b4d6.sql",
        "20250819011622_fd7c36ff-7979-41fc-a0e6-1600ed702048.sql",
        "20250819014314_d6cf782e-a778-4f30-bf87-b8db0fd1e050.sql",
        "20250819015223_72a62ff3-b756-48fc-b9e4-ca26338aa895.sql",
        "20250819015936_15f1dfcd-d841-4e82-812e-6d8707307834.sql",
        "20250819104317_2ef4e13f-6130-4818-b9ff-abad4fe9107b.sql",
        "20250819111747_c3e6be8c-76f7-40bd-96ce-03099c09afaa.sql",
        "20250819121822_1b043179-9003-4dee-a246-5a42b2ecdca2.sql",
        "20250819133600_dc5a0aa2-cb91-4d51-954d-038c172b8875.sql",
        "20250826000001_fix_affiliates_table.sql",
        "20250826120000_content_management_system.sql",
        "20250827000001_fase1_correcoes_criticas.sql",
        "20250827000002_fix_storage_buckets.sql",
        "20250827000003_verification_and_cleanup.sql",
        "20250827000009_fix_rls_500_errors.sql",
        "20250827000021_populate_initial_data.sql",
        "20250827000022_member_types_final.sql",
        "20250906000001_create_avatars_bucket.sql",
        "20250906000002_fix_storage_system_complete.sql",
        "20250906000003_add_foto_url_column.sql",
        "20250907000001_create_notification_templates.sql",
        "20250908000001_add_service_fields_to_asaas_cobrancas.sql",
        "20250908000002_add_service_fields_fixed.sql",
        "20250908000003_add_service_fields_safe.sql",
        "20250908000004_create_admin_notifications.sql",
        "20250908000005_create_audit_system.sql"
      ]
    }
  },
  "apis": {
    "supabase": {
      "status": "OK",
      "url": "Missing",
      "key": "Missing",
      "client": "Configured in src/integrations/supabase/client.ts"
    },
    "asaas": {
      "status": "OK",
      "key": "Missing",
      "baseUrl": "https://www.asaas.com/api/v3",
      "integration": "Configured in hooks/useAsaasPayments.ts"
    },
    "webhooks": {
      "status": "OK",
      "endpoint": "/api/webhook",
      "configured": true
    },
    "cors": {
      "status": "OK",
      "configured": "In serverless functions",
      "origins": [
        "*",
        "https://comademig.vercel.app"
      ]
    }
  },
  "config": {
    "environment": {
      "status": "OK",
      "required": [
        {
          "name": "SUPABASE_URL",
          "configured": "No"
        },
        {
          "name": "SUPABASE_ANON_KEY",
          "configured": "No"
        },
        {
          "name": "ASAAS_API_KEY",
          "configured": "No"
        }
      ]
    },
    "packageJson": {
      "status": "OK",
      "name": "comademig",
      "version": "0.0.0",
      "type": "module",
      "scripts": [
        "dev",
        "build",
        "build:dev",
        "lint",
        "preview"
      ],
      "dependencies": 47,
      "devDependencies": 18
    },
    "typescript": {
      "status": "OK"
    },
    "vite": {
      "status": "OK",
      "hasReactPlugin": true,
      "hasPathAlias": true,
      "port": "8080"
    },
    "vercel": {
      "status": "OK",
      "functions": "Not configured"
    }
  },
  "errors": [],
  "warnings": [],
  "recommendations": [],
  "integrations": {
    "asaas": {
      "status": "OK",
      "note": "Integration test requires API key and network call"
    },
    "supabase": {
      "status": "OK",
      "note": "Integration test requires network call"
    },
    "vercel": {
      "status": "OK",
      "deployment": "https://comademig.vercel.app",
      "functions": "Serverless functions configured"
    }
  }
}