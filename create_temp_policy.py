#!/usr/bin/env python3

import os
from supabase import create_client, Client
from dotenv import load_dotenv

# Carregar vari√°veis de ambiente
load_dotenv()

# Configura√ß√£o do Supabase
url = os.getenv("VITE_SUPABASE_URL")
key = os.getenv("VITE_SUPABASE_PUBLISHABLE_KEY")

supabase: Client = create_client(url, key)

print("üîß CRIANDO POL√çTICA TEMPOR√ÅRIA PARA DEBUG...")
print("=" * 50)

# Como n√£o podemos executar SQL diretamente, vamos tentar uma abordagem diferente
# Vamos verificar se o problema est√° na autentica√ß√£o ou na pol√≠tica

print("üîç DIAGN√ìSTICO DO PROBLEMA:")
print("1. O usu√°rio tem role 'admin' ‚úÖ")
print("2. O SELECT funciona ‚úÖ") 
print("3. O UPDATE retorna 204 (sucesso) mas n√£o salva ‚ùå")
print("4. O UPSERT falha com erro de pol√≠tica RLS ‚ùå")

print("\nüí° POSS√çVEIS CAUSAS:")
print("‚Ä¢ A pol√≠tica RLS est√° muito restritiva")
print("‚Ä¢ O token de autentica√ß√£o n√£o est√° sendo enviado corretamente")
print("‚Ä¢ H√° um trigger interferindo")
print("‚Ä¢ A fun√ß√£o auth.uid() n√£o est√° retornando o ID correto")

print("\nüîß SOLU√á√ïES RECOMENDADAS:")
print("1. Verificar se o frontend est√° enviando o token de autentica√ß√£o")
print("2. Verificar se a fun√ß√£o auth.uid() est√° funcionando")
print("3. Simplificar temporariamente a pol√≠tica RLS")
print("4. Verificar logs do Supabase para mais detalhes")

print("\n‚ö†Ô∏è  A√á√ÉO NECESS√ÅRIA:")
print("Como n√£o podemos executar SQL diretamente via Python,")
print("voc√™ precisa executar as seguintes queries no painel do Supabase:")

print("\n-- POL√çTICA TEMPOR√ÅRIA MAIS PERMISSIVA:")
print("""
-- Remover pol√≠tica restritiva
DROP POLICY IF EXISTS "Admins can manage content" ON public.content_management;

-- Criar pol√≠tica tempor√°ria mais permissiva
CREATE POLICY "Temp permissive policy" ON public.content_management
FOR ALL TO authenticated
USING (true)
WITH CHECK (true);
""")

print("\n-- DEPOIS DE TESTAR, RESTAURAR A POL√çTICA ORIGINAL:")
print("""
-- Remover pol√≠tica tempor√°ria
DROP POLICY IF EXISTS "Temp permissive policy" ON public.content_management;

-- Restaurar pol√≠tica original
CREATE POLICY "Admins can manage content" ON public.content_management
FOR ALL TO authenticated
USING (
  EXISTS (
    SELECT 1 FROM user_roles 
    WHERE user_id = auth.uid() AND role = 'admin'
  )
)
WITH CHECK (
  EXISTS (
    SELECT 1 FROM user_roles 
    WHERE user_id = auth.uid() AND role = 'admin'
  )
);
""")

print("\n" + "=" * 50)
print("‚úÖ INSTRU√á√ïES FORNECIDAS")